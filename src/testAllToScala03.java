import java.util.Scanner;

public class testAllToScala03 {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int number = in.nextInt();
        in = new Scanner(System.in);
        String s = in.nextLine();

        int[] m = new int[number + 1];
        m[0] = 0;
        int last = 0;

        for (int i = 0; i < number; i++) {
            for (int j = i + 1; j > last; j--) {
                m[j] = m[j-1];
            }
            if (s.charAt(i) == 'R') {
                last = last + 1;
            }
            m[last] = i + 1;
        }
        for (int i = 0; i < m.length; i++) System.out.print(m[i] + " ");

    }
}

//    Вам дана последовательность ﻿
//�
//A﻿, изначально состоящая из одного элемента ﻿
//0
//0﻿ ﻿
//(
//�
//=
//(
//0
//)
//)
//(A=(0))﻿ и строка ﻿
//�
//S﻿ длины ﻿
//�
//N﻿, состоящая только из символов ﻿
//«
//�
//»
//«L»﻿ и ﻿
//«
//�
//»
//.
//«R».﻿
//
//Затем вы проделаете следующую операцию для ﻿
//�
//=
//1
//,
//2
//,
//3
//,
//.
//.
//.
//,
//�
//:
//i=1,2,3,...,N:﻿
//
//Если ﻿
//�
//�
//=
//�
//,
//S
//i
//​
// =L,﻿ то вы вставите число ﻿
//�
//i﻿ слева от числа ﻿
//�
//−
//1
//i−1﻿ в последовательность ﻿
//�
//.
//A.﻿
//Если ﻿
//�
//�
//=
//�
//,
//S
//i
//​
// =R,﻿ то вы вставите число ﻿
//�
//i﻿ справа от числа ﻿
//�
//−
//1
//i−1﻿ в последовательность ﻿
//�
//.
//A.﻿
//Найдите последовательность, которая получится после всех операций.
//
//Формат входных данных
//
//В первой строке вводится одно целое число ﻿
//�
//N﻿ ﻿
//(
//1
//⩽
//�
//⩽
//5
//⋅
//1
//0
//5
//)
//(1⩽N⩽5⋅10
//5
// )﻿ ﻿
//−
//−﻿ длина строки ﻿
//�
//.
//S.﻿
//
//Во второй строке вводится строка ﻿
//�
//(
//∣
//�
//∣
//=
//�
//)
//S(∣S∣=N)﻿. Гарантируется, что ﻿
//�
//S﻿ состоит только из символов ﻿
//«
//�
//»
//«l»﻿ и ﻿
//«
//�
//»
//«r»﻿.
//
//Формат выходных данных
//
//Выведите ﻿
//�
//+
//1
//N+1﻿ число через пробел ﻿
//−
//−﻿ последовательность ﻿
//�
//A﻿, которая получится в результате применения ﻿
//�
//N﻿ операций.
//
//Замечание
//
//В первом примере последовательность будет меняться так:
//
//﻿
//�
//1
//=
//�
//,
//S
//1
//​
// =L,﻿ вы вставите ﻿
//1
//1﻿ слева от ﻿
//0.
//0.﻿ ﻿
//0
//→
//(
//1
//,
//0
//)
//0→(1,0)﻿
//﻿
//�
//2
//=
//�
//,
//S
//2
//​
// =R,﻿ вы вставите ﻿
//2
//2﻿ справа от ﻿
//1.
//1.﻿ ﻿
//(
//1
//,
//0
//)
//→
//(
//1
//,
//2
//,
//0
//)
//(1,0)→(1,2,0)﻿
//﻿
//�
//3
//=
//�
//,
//S
//3
//​
// =R,﻿ вы вставите ﻿
//3
//3﻿ справа от ﻿
//2.
//2.﻿ ﻿
//(
//1
//,
//2
//,
//0
//)
//→
//(
//1
//,
//2
//,
//3
//,
//0
//)
//(1,2,0)→(1,2,3,0)﻿
//﻿
//�
//4
//=
//�
//,
//S
//4
//​
// =R,﻿ вы вставите ﻿
//4
//4﻿ справа от ﻿
//3.
//3.﻿ ﻿
//(
//1
//,
//2
//,
//3
//,
//0
//)
//→
//(
//1
//,
//2
//,
//3
//,
//4
//,
//0
//)
//(1,2,3,0)→(1,2,3,4,0)﻿
//﻿
//�
//5
//=
//�
//,
//S
//5
//​
// =L,﻿ вы вставите ﻿
//5
//5﻿ слева от ﻿
//4.
//4.﻿ ﻿
//(
//1
//,
//2
//,
//3
//,
//4
//,
//0
//)
//→
//(
//1
//,
//2
//,
//3
//,
//5
//,
//4
//,
//0
//)
//(1,2,3,4,0)→(1,2,3,5,4,0)﻿
//Таким образом, после всех операций ﻿
//�
//=
//(
//1
//,
//2
//,
//3
//,
//5
//,
//4
//,
//0
//)
//.
//A=(1,2,3,5,4,0).